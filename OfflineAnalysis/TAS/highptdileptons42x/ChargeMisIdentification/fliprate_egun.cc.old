//-------------------------------------------------------------------
// Returns the sign flip rate from the electron gun
// Note that the electron gun only goes up to 100 GeV
// For electron pt>100 returns the flip rate in the 90-100 Gev bin
// For electron pt<10  returns zero
// For electron abs(eta)>2.4 returns zero & prints out an error
//
// Usage:
// double flipRate   = getSingleEleFlipRate(el_pt, el_eta)
// double fliRateErr = getSingleEleFlipRateError(el_pt, el_eta)
//
// Claudio & Derek 23 July 2009
//-------------------------------------------------------------
#include "fliprate_egun.h"
#include <iostream>
#include <stdio.h>
#include <math.h>

using namespace std;

double getSingleEleNum(double el_pt, double el_eta) {

  el_eta = fabs(el_eta);

  if( el_eta < 0.5 ){ 
    if( el_pt > 70 ) return 30;
    if( el_pt > 50 ) return 24;
    if( el_pt > 40 ) return 11;
    if( el_pt > 30 ) return 9;
    if( el_pt > 10 ) return 8;
    return 0.0;
  }
  if( el_eta < 1 ){ 
    if( el_pt > 70 ) return 90;
    if( el_pt > 50 ) return 38;
    if( el_pt > 40 ) return 20;
    if( el_pt > 30 ) return 21;
    if( el_pt > 10 ) return 17;
    return 0.0;
  }
  if( el_eta < 1.28 ){ 
    if( el_pt > 70 ) return 196;
    if( el_pt > 50 ) return 95;
    if( el_pt > 40 ) return 46;
    if( el_pt > 30 ) return 33;
    if( el_pt > 10 ) return 22;
    return 0.0;
  }
  if( el_eta < 1.56 ){ 
    if( el_pt > 70 ) return 377;
    if( el_pt > 50 ) return 214;
    if( el_pt > 40 ) return 74;
    if( el_pt > 30 ) return 53;
    if( el_pt > 10 ) return 40;
    return 0.0;
  }
  if( el_eta < 1.84 ){ 
    if( el_pt > 70 ) return 783;
    if( el_pt > 50 ) return 449;
    if( el_pt > 40 ) return 180;
    if( el_pt > 30 ) return 113;
    if( el_pt > 10 ) return 77;
    return 0.0;
  }
  if( el_eta < 2.12 ){ 
    if( el_pt > 70 ) return 578;
    if( el_pt > 50 ) return 370;
    if( el_pt > 40 ) return 133;
    if( el_pt > 30 ) return 101;
    if( el_pt > 10 ) return 93;
    return 0.0;
  }
  if( el_eta < = 2.5 ){ 
    if( el_pt > 70 ) return 510;
    if( el_pt > 50 ) return 282;
    if( el_pt > 40 ) return 116;
    if( el_pt > 30 ) return 74;
    if( el_pt > 10 ) return 91;
    return 0.0;
  }
  std::cout << "Error: eta > 2.5 value found" << endl;
  return 0.0;
}


double getSingleEleDenom(double el_pt, double el_eta) {

  el_eta = fabs(el_eta);

  if( el_eta < 0.5 ){ 
    if( el_pt > 70 ) return 385078;
    if( el_pt > 50 ) return 257602;
    if( el_pt > 40 ) return 128813;
    if( el_pt > 30 ) return 127286;
    if( el_pt > 10 ) return 226505;
    return 0.0;
  }
  if( el_eta < 1 ){ 
    if( el_pt > 70 ) return 382730;
    if( el_pt > 50 ) return 255932;
    if( el_pt > 40 ) return 127597;
    if( el_pt > 30 ) return 127005;
    if( el_pt > 10 ) return 229408;
    return 0.0;
  }
  if( el_eta < 1.28 ){ 
    if( el_pt > 70 ) return 207002;
    if( el_pt > 50 ) return 137780;
    if( el_pt > 40 ) return 68225;
    if( el_pt > 30 ) return 66900;
    if( el_pt > 10 ) return 113227;
    return 0.0;
  }
  if( el_eta < 1.56 ){ 
    if( el_pt > 70 ) return 156687;
    if( el_pt > 50 ) return 104275;
    if( el_pt > 40 ) return 51676;
    if( el_pt > 30 ) return 49004;
    if( el_pt > 10 ) return 80235;
    return 0.0;
  }
  if( el_eta < 1.84 ){ 
    if( el_pt > 70 ) return 176706;
    if( el_pt > 50 ) return 117706;
    if( el_pt > 40 ) return 58863;
    if( el_pt > 30 ) return 56765;
    if( el_pt > 10 ) return 84302;
    return 0.0;
  }
  if( el_eta < 2.12 ){ 
    if( el_pt > 70 ) return 179572;
    if( el_pt > 50 ) return 121041;
    if( el_pt > 40 ) return 60673;
    if( el_pt > 30 ) return 59678;
    if( el_pt > 10 ) return 100038;
    return 0.0;
  }
  if( el_eta < = 2.5 ){ 
    if( el_pt > 70 ) return 161060;
    if( el_pt > 50 ) return 108875;
    if( el_pt > 40 ) return 54117;
    if( el_pt > 30 ) return 54034;
    if( el_pt > 10 ) return 98140;
    return 0.0;
  }
  std::cout << "Error: eta > 2.5 value found" << endl;
  return 0.0;
}


double getSingleEleFlipRate(double el_pt, double el_eta) {
  if( el_pt < 10.0 || fabs(el_eta) > 2.5 ){
    std::cout << "Error in 'getSingleEleFlipRate': pt or eta value found out of range" << endl;
    return 0.0;
  }
  return getSingleEleNum(el_pt, fabs(el_eta))/getSingleEleDenom(el_pt, fabs(el_eta));
}

double getSingleEleFlipRateError(double el_pt, double el_eta) {
  //the binomial error
  if( el_pt < 10.0 || fabs(el_eta) > 2.5 ){
    std::cout << "Error in 'getSingleEleFlipRate': pt or eta value found out of range" << endl;
    return 0.0;
  }
  double num   = getSingleEleNum(el_pt,   fabs(el_eta));
  double denom = getSingleEleDenom(el_pt, fabs(el_eta));
  double p = num/denom;
  return sqrt(p*(1-p)/denom);
}
